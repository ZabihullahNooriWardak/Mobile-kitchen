<style>
  .custom-card-spacing .card {
    margin-left: 0.5rem;
    margin-right: 0.5rem;
  }
  .category-button {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
  }
</style>

<div class="container">
  <div class="row">
    <div class="col">
      <h1 class="mb-4">Foods</h1>

      <% if user_signed_in? && current_user.user_detail&.is_admin %>
        <%= link_to 'New Food', new_food_path, class: "btn btn-primary mb-4" %>
      <% end %>

      <% @foods.group_by(&:category).each do |category, foods| %>
        <h2 class="mb-4" id="<%= category.parameterize %>"><%= category.capitalize %></h2>
        <div class="row custom-card-spacing">
          <% foods.each do |food| %>
            <div class="col-md-3 mb-4">
              <div class="card" style="width: 18rem;">
                <% if food.image.attached? %>
                  <%= link_to food do %>
                    <%= image_tag food.image, class: "card-img-top", style: "object-fit: cover; height: 200px; width: 100%;" %>
                  <% end %>
                <% else %>
                  <img src="https://via.placeholder.com/300x200" class="card-img-top" alt="No image available" style="object-fit: cover; height: 200px; width: 100%;">
                <% end %>
                <div class="card-body">
                  <h5 class="card-title"><%= food.name %></h5>
                  <p class="card-text"><strong>Price:</strong> <%= number_to_currency(food.price) %></p>
                </div>
                <ul class="list-group list-group-flush">
                  <li class="list-group-item"><strong>Category:</strong> <%= food.category %></li>
                </ul>
                <div class="card-body">
                  <%= link_to 'Show', food, class: "btn btn-primary mb-2" %>
                  <% if user_signed_in? && current_user.user_detail&.is_admin %>
                    <%= link_to 'Edit', edit_food_path(food), class: "btn btn-secondary mb-2" %>
                    <%= button_to 'Destroy', food, method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-danger mb-2" %>
                  <% end %>
                  <% if user_signed_in? && !current_user.user_detail&.is_admin %>
                    <%= button_to 'Add to Cart', cart_items_path(food_id: food.id), method: :post, class: "btn btn-primary" %>
                  <% end %>
                </div>
              </div>
            </div>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<!-- Category Button -->
<button class="btn btn-primary category-button" data-bs-toggle="offcanvas" data-bs-target="#categoryDrawer" aria-controls="categoryDrawer">
  Categories
</button>

<!-- Category Drawer -->
<div class="offcanvas offcanvas-start" tabindex="-1" id="categoryDrawer" aria-labelledby="categoryDrawerLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="categoryDrawerLabel">Categories</h5>
    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
    <ul class="navbar-nav">
      <% @foods.group_by(&:category).each do |category, foods| %>
        <li class="nav-item">
          <a href="#<%= category.parameterize %>" class="nav-link link-secondary" onclick="scrollToCategory(event, '<%= category.parameterize %>')"><%= category.capitalize %></a>
        </li>
      <% end %>
    </ul>
  </div>
</div>

<!-- Bootstrap JavaScript and dependencies -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
<script>
  function scrollToCategory(event, category) {
    event.preventDefault();
    var element = document.getElementById(category);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth', block: 'start' });
      setTimeout(() => {
        var categoryDrawer = document.getElementById('categoryDrawer');
        var bootstrapOffcanvas = bootstrap.Offcanvas.getInstance(categoryDrawer);
        if (bootstrapOffcanvas) {
          bootstrapOffcanvas.hide();
        }
        removeBackdrop();
      }, 500);
    }
  }

  function removeBackdrop() {
    var backdrops = document.querySelectorAll('.offcanvas-backdrop');
    backdrops.forEach(backdrop => backdrop.remove());
  }

  document.addEventListener('DOMContentLoaded', () => {
    const offCanvasElems = document.querySelectorAll('.offcanvas');
    offCanvasElems.forEach(offCanvasEl => {
      offCanvasEl.addEventListener('hidden.bs.offcanvas', () => {
        removeBackdrop();
      });
    });
  });
</script>
